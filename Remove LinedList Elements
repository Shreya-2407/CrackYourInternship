/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head==NULL)
            return head;
        ListNode* curr=head->next;
        ListNode* prev=head;
        while(curr&&curr->next){
            if(curr->val==val){
                while(curr && curr->val==val){
                    curr=curr->next;
                }
            }
            
            prev->next=curr;
            prev=curr;
            if(curr)
            curr=curr->next; 
            
        }
       
        if(curr && curr->val==val){
           prev->next=NULL; 
        }
        if(head&&head->val==val){
            return head->next;
        }
        else{
            return head;
        }
        
    }
};
